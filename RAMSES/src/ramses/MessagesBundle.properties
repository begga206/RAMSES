#Parserklasse Messages
ERROR_EXCPECTED_COLON = Expected ':' after Instruction Pointer
ERROR_INSTPTR_CONTAINS_LETTER = Instruction Pointer cannot contain a letter
ERROR_INST_UNKNOWN = The following instruction is not known: 
ERROR_WRONG_INSPTR = Given Instruction Pointer was not expected
ERROR_WRONG_FORMAT = The line does not match with any known format
ERROR_INVALID_OPERATOR = The operator is invalid
ERROR_INPUT_KEYWORD = The keyword 'INPUT' is missing or written wrong.
ERROR_INPUT_FORMAT = Unsupported INPUT format. Expected: s[x] | s[x]...s[y] | s[x]=y . Got: 
ERROR_OUTPUT_KEYWORD = The keyword 'OUTPUT' is missing or written wrong.
ERROR_OUTPUT_FORMAT = Unsupported OUTPUT format. Expected: s[x] | s[x]...s[y] . Got: 
ERROR_WRONG_IP = The given instruction pointer is not equal to the internal one. Given: 

#Parserklasse SyntaxErrorMeldungen
ERROR_PATTERN_NO_DEST_REG = Destination register is missing
ERROR_PATTERN_IMM_DEST_REG = An immediate constant cannot be the destination register
ERROR_PATTERN_UNKNOWN_OPERATOR = Unknown Operator. Expected: +, -, *, div or mod
ERROR_PATTERN_NO_FIRST_OPERAND = First operand is missing
ERROR_PATTERN_NO_SECOND_OPERAND = Second operand is missing
ERROR_PATTERN_NO_IP = Instruction Pointer is missing
ERROR_PATTERN_LD_MEM_IMM = You cannot load an immediate constant in a memory register
ERROR_PATTERN_LD_MEM_MEM = You cannot load a value from a memory register in another memory register
ERROR_PATTERN_LD_I_MMEM = You cannot load a value from a memory register in an index register
ERROR_PATTEN_LD_REG_REG = You cannot load from a value from the accumulator register in the index register or the other way around
ERROR_PATTERN_FORGOT_COLON = Expected ':' after instruction pointer
ERROR_PATTERN_NO_THEN = Expected 'then' in if instruction
ERROR_PATTERN_IF_NOT_NULL = You must compare with 0 in an if-instruction
ERROR_PATTERN_IF_UNKNWN_OP = Unknown operator in if-instruction. Expected: =, >=, >, <, <= or !=
ERROR_INDEX_DEST_NE_OP1 = Destination register and operand 1 must be the same index register
ERROR_PATTERN_INDEX_UNKWN_OP = Unknown operator in index instruction. Expected: + 1 or - 1
ERROR_PATTERN_INDEX_OP2_NOT_ONE = You can only in- or decrement an index register, following operand 2 must be 1

#Ramsesklasse Messages
OUTPUT = #OUTPUT#
INSTRUCTION = Instruction
ERROR_DIVISION_BY_ZERO = Division by Zero
ERROR_INDEX_OUT_OF_BOUNDS = Index out of bounds
ERROR_MEMORY_OUT_OF_BOUNDS = Memory out of bounds
ERROR_JUMP_INVALID = Jump Invalid
ERROR_NO_HALT_INST = The RAM program must have at least one HALT instruction
ERROR_A_NOT_INIT = The accumulator has not been initialized yet
ERROR_MEM_NOT_INIT = The following memory register has not been initialized yet: s[
ERROR_INDEX_NOT_INIT = The following index register has not been initialized yet: i
ERROR_REACHED_MAX_INST = Reached maximum amount of instructions

#MyAppletklasse
#Errormessages
ERROR_MIN_GT_MAX = The minimal value must not be greater than the maximal value
ERROR_MAX_LT_MIN = The maximal value must not be less than the minimal value
ERROR_NOT_ALL_INPUT_SET = Not every input has a value set
ERROR_NO_COMPILED_PROG = There is no compiled program to run
ERROR_WRONG_COMPILE_FORMAT = No .txt file to compile given
ERROR_VALID_INT = Every input needs a valid number

#Button/Label Namen
COMPILE = Compile
START = Start
DEBUG = Debug
NEXT_INST = Next Instruction
CONTINUE = Continue
CLI_KEY = Back to CLI
BP_BUTTON = set breakpoint
EDITOR = Editor:
CONSOLE = Console:
INPUT = Input:

#Konsolennachrichten
COMPILING_SUCCESSFUL = Compiling successful.
INVALID_FILE_SIZE = The RAM program does not have the minimum length

#CLI Nachrichten
CLI_WELCOME_TEXT = Welcome to Ramses.\nTo see all usable commands type 'help'.
CLI_HELP_TEXT = Ramses instruction list:\n\thelp - shows instruction list\n\tmin [Number] - without Number: shows the current minimum value; with Number: sets the value to Number\
	\n\tmax [Number] - without Number: shows the current maximum value; with Number: sets the value to Number\
	\n\tcompile FILEPATH.txt - compiles a RAM-Program\
	\n\trun - runs the RAM program, INPUT will be set random between min and max\
	\n\trun [args] - runs the RAM program, INPUT will be set by user. Every value must be set\
	\n\tgui - switches application to GUI\
	\n\tclear - resets the console